// Generated by CoffeeScript 1.4.0
(function() {
  var lineHeight, lineWidth, miniserv_url;

  lineHeight = 40;

  lineWidth = 40;

  yak.functions.add({
    scrollLines: function(n) {
      return window.scrollBy(0, n * lineHeight);
    },
    scrollCols: function(n) {
      return window.scrollBy(n * lineWidth, 0);
    },
    scrollPages: function(n) {
      var direction, distance;
      direction = (n >= 0 ? 1 : -1);
      distance = Math.abs(n) * window.innerHeight - lineHeight;
      return window.scrollBy(0, direction * distance);
    },
    colLeft: function() {
      return yak.functions.scrollCols(-1);
    },
    colRight: function() {
      return yak.functions.scrollCols(1);
    },
    lineUp: function() {
      return yak.functions.scrollLines(-1);
    },
    lineDown: function() {
      return yak.functions.scrollLines(1);
    },
    pageDown: function() {
      return yak.functions.scrollPages(1);
    },
    pageUp: function() {
      return yak.functions.scrollPages(-1);
    },
    gotoBottom: function() {
      return window.scroll(window.scrollX, document.height);
    },
    gotoTop: function() {
      return window.scroll(window.scrollX, 0);
    },
    gotoLeft: function() {
      return window.scroll(0, window.scrollY);
    },
    gotoRight: function() {
      return window.scroll(document.width, window.scrollY);
    },
    tabSelect: function(n) {
      return yak.tabs.getAllInWindow(null, function(tabs) {
        return tabs.forEach(function(t) {
          if (t.index === n) {
            return yak.tabs.update(t.id, {
              selected: true
            });
          }
        });
      });
    },
    tabSelectRelative: function(n) {
      return yak.tabs.getSelected(null, function(tab) {
        return yak.functions.tabSelect(tab.index + n);
      });
    },
    tabLeft: function() {
      return yak.functions.tabSelectRelative(-1);
    },
    tabRight: function() {
      return yak.functions.tabSelectRelative(1);
    },
    goBack: function() {
      return history.go(-1);
    },
    goUp: function() {
      var components;
      components = location.pathname.split("/");
      if (components.pop() === "") {
        components.pop();
      }
      components.push("");
      return location.href = location.protocol + "//" + location.host + components.join("/");
    },
    goRoot: function() {
      return location.href = location.protocol + "//" + location.host + "/";
    },
    pass: function() {
      return false;
    }
  });

  yak.bindings.add({
    "C-b": {
      exclude: yak.textElements,
      onkeydown: yak.functions.colLeft
    },
    "C-p": {
      exclude: yak.textElements,
      onkeydown: yak.functions.lineUp
    },
    "C-n": {
      exclude: yak.textElements,
      onkeydown: yak.functions.lineDown
    },
    "M-v": {
      exclude: yak.textElements,
      onkeydown: yak.functions.pageUp
    },
    "C-v": {
      exclude: yak.textElements,
      onkeydown: yak.functions.pageDown
    },
    "C-a": {
      exclude: yak.textElements,
      onkeydown: yak.functions.gotoLeft
    },
    "C-e": {
      exclude: yak.textElements,
      onkeydown: yak.functions.gotoRight
    },
    "M-<": {
      exclude: yak.textElements,
      onkeydown: yak.functions.gotoTop
    },
    "M->": {
      exclude: yak.textElements,
      onkeydown: yak.functions.gotoBottom
    },
    "M-n": {
      exclude: yak.textElements,
      onkeydown: yak.functions.tabRight
    },
    "M-p": {
      exclude: yak.textElements,
      onkeydown: yak.functions.tabLeft
    },
    "M-:": {
      onkeydown: function(event) {
        return eval_(prompt("Eval:"));
      }
    }
  });

  miniserv_url = "http://localhost:7345";

  yak.bindings.add({
    "C-M-r": {
      onkeydown: function() {
        var r;
        r = new XMLHttpRequest();
        r.open("POST", "" + miniserv_url + "/url");
        r.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        return r.send(JSON.stringify({
          url: window.location.toString(),
          title: document.title,
          body: window.getSelection().toString()
        }));
      }
    }
  });

}).call(this);
