#!/bin/bash
#
#

set -e
set -x


# cdo cd's into ~/.opt/$1
cdo() {
  cd "${HOME}/.opt/${1}"
}
export -f cdo

# uptodate fetches a git repo and returns non 0 if HEAD is in sync with remote.
uptodate() {
  local dir=${1}
  [ ! -d ${dir} ] && return 0
  cd ${dir}
  git fetch upstream master
  local changes=$(git rev-list HEAD..upstream/master --count)
  echo "uptodate ${dir} changes: ${changes}"
  return $changes
  # return 2
}
export -f uptodate

# resetupstream resets a git working tree
resetupstream() {
  git log HEAD..upstream/master --oneline
  git reset --hard upstream/master
}
export -f resetupstream

# runCmd runs a command in a subshell, on graphical terminals this
runCmd() {
  if [ -n "$DISPLAY" ] && [ `which urxvt` ]; then
    exec urxvt -title upgradeall -name upgradeall -e bash -c \
         "termcolors; echo RUN \" $* \";
$*
echo ;
echo \"COMPLETED: $* \";
echo \">>> ENTER KEY CLOSES TERMINAL!\";
read any;" &
  else
    (
      set +e
      $*
    )
  fi
}

# runcmdifchange runs a command in a subshell if there are changes in the
# remote git repo
runCmdIfChange() {
  local dir=${1}
  local cmd=${2}
  uptodate "${HOME}/.opt/${dir}" || runCmd "${0} ${cmd}"
}
export -f runCmdIfChange

# upgrader-goget installs variout things using go get.
upgrader-goget() {
  (
    echo UPDATING yt-download
    youtube-dl --update
  ) &
  echo UPDATING go-tools
  GOPATH=${HOME}
  export GOPATH;
  go get -v -u \
     github.com/github/hub \
     github.com/golang/lint/golint \
     github.com/jstemmer/gotags \
     get github.com/motemen/ghq \
     github.com/junegunn/fzf/src/fzf \
     github.com/kardianos/govendor/... \
     github.com/monochromegane/the_platinum_searcher/cmd/... \
     github.com/nsf/gocode \
     github.com/rogpeppe/godef \
     github.com/shurcooL/Go-Package-Store \
     github.com/shurcooL/markdownfmt \
     github.com/smartystreets/goconvey \
     github.com/sosedoff/pgweb \
     golang.org/x/tools/cmd/... \
  ;
}

upgrader-dunst() {
  cdo dunst
  resetupstream
  make
  sudo make install
}

upgrader-compton(){
  cdo compton
  resetupstream
  make
}

upgrader-mu(){
  cdo mu
  resetupstream
  make
  sudo make install
}

upgrader-pip() {
  deactivate || true
  workon default || true
  pip install --upgrade \
      autopep8 \
      bumpversion \
      detox \
      devpi-client \
      docker-compose \
      git-goggles \
      git-up \
      mkdocs \
      pyformat \
      pyrg \
      tox \
      virtualenv \
  ;
}

upgrader-npm() {
  npm install -g \
      babel-eslint \
      bower \
      browserify watchify \
      coffee-script \
      coffeelint \
      eslint \
      eslint-plugin-react \
      grunt-cli \
      gulp \
      js2coffee \
      jshint \
      jsonlint \
      jsxhint \
      npm-proxy-cache \
      stylus \
      tern \
      titanium \
      uglify-js \
      uglifycss \
      webpack \
  ;

}

cmd=${1}
case $cmd in
  goget|dust|compton|mu|npm|pip)
    upgrader-${cmd}
    ;;
  all)
    runCmdIfChange "${HOME}/.opt/dunst" "dunst" &
    runCmdIfChange "${HOME}/.opt/compton" "compton" &
    runCmdIfChange "${HOME}/.opt/mu" "mu" &
    runCmd "sudo apt-get update ; sudo apt-get dist-upgrade"
    runCmd "xmonadUpdate"
    runCmd "${HOME}/.emacs.d/installDeps emacs"
    runCmd "hsadmin pull"
    runCmd "$0 goget" &
    ;;
  *)
    echo "$0 all goget dust compton mu npm pip"
esac

