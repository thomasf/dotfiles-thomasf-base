#!/bin/bash
#
#

set -e
set -x


cdo() {
  cd "${HOME}/.opt/${1}"
}
export -f cdo

uptodate() {
  local dir=${1}
  [ ! -d ${dir} ] && return 1
  cd ${dir}
  git fetch upstream master
  local changes=$(git rev-list HEAD..upstream/master --count)
  return $changes
  # return 2
}
export -f uptodate

resetupstream() {
  git log HEAD..upstream/master --oneline
  git reset --hard upstream/master
}
export -f resetupstream

runCmd() {
    if [ -n "$DISPLAY" ] && [ `which urxvt` ]; then
        exec urxvt -title upgradeall -name upgradeall -e bash -c \
            "termcolors; echo RUN \" $* \";
$*
echo ;
echo \"COMPLETED: $* \";
echo \">>> ENTER KEY CLOSES TERMINAL!\";
read any;" &

    else
        (
            set +e
            $*
        )
    fi
}

( uptodate "${HOME}/.opt/dunst" || runCmd "cdo dunst ; resetupstream ; make ; sudo make install" ) &
( uptodate "${HOME}/.opt/compton" || runCmd "cdo compton; resetupstream; make" ) &
( uptodate "${HOME}/.opt/mu" || runCmd "cdo mu; resetupstream; make ; sudo make install" ) &
runCmd "sudo apt-get update ; sudo apt-get dist-upgrade"
runCmd "xmonadUpdate"
runCmd "${HOME}/.emacs.d/installDeps emacs"
runCmd "hsadmin pull"

runCmd "\
echo UPDATING yt-download
youtube-dl --update; \
echo UPDATING PT; \
go-get-tools -u github.com/monochromegane/the_platinum_searcher/...; \
echo UPDATING HUB; \
go-get-tools -u github.com/github/hub"
