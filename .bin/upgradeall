#!/bin/bash
#
#

set -e
set -x


# cdo cd's into ~/.opt/$1
cdo() {
  cd "${HOME}/.opt/${1}"
}
export -f cdo

# uptodate fetches a git repo and returns non 0 if HEAD is in sync with remote.
uptodate() {
  local dir=${1}
  [ ! -d ${dir} ] && return 0
  cd ${dir}
  git fetch upstream master
  local changes=$(git rev-list HEAD..upstream/master --count)
  echo "uptodate ${dir} changes: ${changes}"
  return $changes
  # return 2
}
export -f uptodate

# resetupstream resets a git working tree
resetupstream() {
  git log HEAD..upstream/master --oneline
  git reset --hard upstream/master
}
export -f resetupstream

# runCmd runs a command in a subshell, on graphical terminals this
runCmd() {
  if [ -n "$DISPLAY" ] && [ `which urxvt` ]; then
    exec urxvt -title upgradeall -name upgradeall -e bash -c \
         "termcolors; echo RUN \" $* \";
$*
echo ;
echo \"COMPLETED: $* \";
echo \">>> ENTER KEY CLOSES TERMINAL!\";
read any;" &
  else
    (
      set +e
      $*
    )
  fi
}


# upgrader-goget installs variout things using go get.
upgrader-goget() {
  echo UPDATING go-tools
  GOPATH=${HOME}
  export GOPATH;
  go get -v -u \
     github.com/github/hub \
     github.com/golang/lint/golint \
     github.com/jstemmer/gotags \
     github.com/junegunn/fzf/... \
     github.com/kardianos/govendor/... \
     github.com/monochromegane/the_platinum_searcher/cmd/... \
     github.com/nsf/gocode \
     github.com/rogpeppe/godef \
     github.com/shurcooL/Go-Package-Store \
     github.com/shurcooL/markdownfmt \
     github.com/smartystreets/goconvey \
     github.com/sosedoff/pgweb \
     golang.org/x/tools/cmd/... \
  ;
}

upgrader-dunst() {
  cdo dunst
  resetupstream
  make
  sudo make install
}

upgrader-compton(){
  cdo compton
  resetupstream
  make
}

upgrader-mu(){
  cdo mu
  resetupstream
  make
  sudo make install
}

recreate-pip() {
  def_dir="${HOME}/.virtualenvs/default"
  def2_dir="${HOME}/.virtualenvs/default2"
  rm -rf "${def_dir}"
  rm -rf "${def2_dir}"
  virtualenv --system-site-packages -p python3.5 "${def_dir}"
  virtualenv --system-site-packages -p python2 "${def2_dir}"
}

upgrader-pip() {
  deactivate || true

  # isort needs to be installed into the virtualenv of the procject

  pip3-default install --upgrade \
               autopep8 \
               bumpversion \
               detox \
               docker-compose \
               flake8 \
               git-up \
               importmagic \
               ipdb \
               ipython \
               jedi \
               mkdocs \
               pyformat \
               requests \
               setuptools_scm \
               tox \
               twine \
               virtualenv \
               virtualenvwrapper \
               youtube_dl \
   ;

   pip2-default install --upgrade \
                wakatime \
                ansible \
                fabric \
                jedi \
                git-goggles \
                termcolor \
                platformio \
                devpi-client \
     ;
}

upgrader-npm() {
  npm install -g \
      babel-eslint \
      bower \
      browserify watchify \
      coffee-script \
      coffeelint \
      eslint \
      eslint-plugin-react \
      grunt-cli \
      gulp \
      js2coffee \
      jshint \
      jsonlint \
      jsxhint \
      npm-proxy-cache \
      stylus \
      tern \
      titanium \
      uglify-js \
      uglifycss \
      webpack \
  ;

}

dp() {
  for i in ${@}; do
   docker pull ${i}
  done
}

upgrader-docker() {
  dp golang:{1.8,1.8.3}
  dp python:{2.7,3.5,3.6}{,-alpine}
  dp golang:{1.8,1.8.3}{,-alpine}
  dp ubuntu:{16.04,17.04}
  dp redis:{3,3.2}
  dp postgres:{9.5,9.6}
  dp plugins/{docker,slack,git,s3,drone-git}
  dp thomasf/{twine,drone-devpi}
  dp minio/minio
  # dp drone/drone:0.7
}

cmd=${1}
case $cmd in
  goget|dust|compton|mu|npm|pip|docker)
    upgrader-${cmd}
    ;;
  recreate-pip)
    recreate-pip
    upgrader-pip
    ;;
  all)
    runCmd "sudo apt-get update ; sudo apt-get dist-upgrade"
    # runCmd "xmonadUpdate"
    runCmd "${HOME}/.emacs.d/installDeps emacs"
    runCmd "hsadmin pull"
    runCmd "$0 goget" &
    ;;
  *)
    echo "$0 all goget dust compton mu npm pip"
esac

