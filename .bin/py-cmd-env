#!/bin/bash

set -e
# set -x

py_v="3"
cmd="NO_COMMAND"
bn=$(basename ${0})
env_name=${bn}

upgradeall() {
  deactivate || true
  for d in ${HOME}/.virtualenvs-cmd/*; do
    export d
    (
      set -e
      cd ${d}
      . bin/activate
      pip install --upgrade $(cat requirements.txt)
    )
  done
}

case ${bn} in
  py-cmd-env)
    case ${1} in
      u|upgrade)
        upgradeall
        exit 0
        ;;
    esac
    echo "usage ${0} upgrade"
    exit 1
    ;;
  pre-commit|pre-commit-validate-manifest|pre-commit-validate-config)
    packages=pre-commit
    env_name=pre-commit
    ;;
  platformio|pio)
    py_v="2"
    packages=platformio
    env_name=platformio
    ;;
  tox|detox)
    packages="tox detox"
    env_name=tox
    ;;
  git-goggles)
    py_v="2"
    packages="git-goggles termcolor"
    ;;
  youtube-dl)
    packages=youtube_dl
    ;;
  devpi)
    packages=devpi-client
    ;;
  *)
    packages=${bn}
    ;;
esac


envs_root="${HOME}/.virtualenvs-cmd"
env_path="${envs_root}/${env_name}"
cmd_path="${env_path}/bin/${bn}"

if [ ! -e "${cmd_path}" ]; then
  deactivate 2>/dev/null || true
  mkdir -p ${envs_root}
  case ${py_v} in
    3*)
      python3 -mvenv --clear "${env_path}"
      ;;
    2*)
      virtualenv -p python2 "${env_path}"
      ;;
    *)
      echo "Nothing to do for ${py_v}"
      exit 1
      ;;
  esac

  ${env_path}/bin/pip install wheel
  ${env_path}/bin/pip install ${packages}
  echo ${packages} > "${env_path}/requirements.txt"
fi

exec ${cmd_path} "$@"
